name: "CI"

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.0
      - uses: pre-commit-ci/lite-action@v1.0.1
        if: always()

  plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - name: "bootstrap/aws"
            tf_args: ""
          - name: "github"
            tf_args: -var token=${{ secrets.GH_PAT }}
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - uses: hashicorp/setup-terraform@v2
      - run: terraform -chdir=${{ matrix.directory.name }} init
        id: init
      - run: terraform -chdir=${{ matrix.directory.name }} ${{ matrix.directory.tf_args }} plan -no-color -input=false
        id: plan

      - name: Comment plan in pull request
        uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request'
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_tag: ${{ matrix.directory.name }}
          message: |
            #### Directory: ${{ matrix.directory.name }}
            #### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`
            #### Terraform Plan üìñ`${{ steps.plan.outcome }}`

            <details><summary>Show Plan</summary>

            ```
            ${{ steps.plan.outputs.stdout }}
            ```

            </details>

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - name: "bootstrap/aws"
            tf_args: ""
          - name: "github"
            tf_args: -var token=${{ secrets.GH_PAT }}
    needs:
      - lint
      - plan
    if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - uses: hashicorp/setup-terraform@v2
      - run: terraform -chdir=${{ matrix.directory.name }} init
      - run: terraform -chdir=${{ matrix.directory.name }} ${{ matrix.directory.tf_args }} apply -auto-approve -input=false
